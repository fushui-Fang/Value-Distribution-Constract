// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structure.proto

/*
Package lyan is a generated protocol buffer package.

It is generated from these files:
	structure.proto

It has these top-level messages:
	Account
	AllocateSgy
	MemberInfo
	MemberSingle
	SigeForSgyInfo
	SigeForSgy
	SigeForSgyStub
	ASgyProposeInfo
	ASgyPropose
	TranferOutput
	TxInfo
	TX
*/
package lyan

import proto "chaincode/mycc/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Addr    string  `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Kind    int64   `protobuf:"varint,2,opt,name=kind" json:"kind,omitempty"`
	Balance float32 `protobuf:"fixed32,3,opt,name=balance" json:"balance,omitempty"`
	Pubkey  string  `protobuf:"bytes,4,opt,name=pubkey" json:"pubkey,omitempty"`
	ID      string  `protobuf:"bytes,5,opt,name=ID" json:"ID,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Account) GetKind() int64 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *Account) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *Account) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type AllocateSgy struct {
	ID        string      `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	PriorID   string      `protobuf:"bytes,2,opt,name=priorID" json:"priorID,omitempty"`
	Addr      string      `protobuf:"bytes,3,opt,name=addr" json:"addr,omitempty"`
	ASgy      *MemberInfo `protobuf:"bytes,4,opt,name=aSgy" json:"aSgy,omitempty"`
	HasSigned []bool      `protobuf:"varint,5,rep,packed,name=hasSigned" json:"hasSigned,omitempty"`
}

func (m *AllocateSgy) Reset()                    { *m = AllocateSgy{} }
func (m *AllocateSgy) String() string            { return proto.CompactTextString(m) }
func (*AllocateSgy) ProtoMessage()               {}
func (*AllocateSgy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AllocateSgy) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AllocateSgy) GetPriorID() string {
	if m != nil {
		return m.PriorID
	}
	return ""
}

func (m *AllocateSgy) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AllocateSgy) GetASgy() *MemberInfo {
	if m != nil {
		return m.ASgy
	}
	return nil
}

func (m *AllocateSgy) GetHasSigned() []bool {
	if m != nil {
		return m.HasSigned
	}
	return nil
}

type MemberInfo struct {
	Ms []*MemberSingle `protobuf:"bytes,1,rep,name=ms" json:"ms,omitempty"`
}

func (m *MemberInfo) Reset()                    { *m = MemberInfo{} }
func (m *MemberInfo) String() string            { return proto.CompactTextString(m) }
func (*MemberInfo) ProtoMessage()               {}
func (*MemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MemberInfo) GetMs() []*MemberSingle {
	if m != nil {
		return m.Ms
	}
	return nil
}

type MemberSingle struct {
	Sequence int64   `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	Addr     string  `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Ort      float32 `protobuf:"fixed32,3,opt,name=ort" json:"ort,omitempty"`
}

func (m *MemberSingle) Reset()                    { *m = MemberSingle{} }
func (m *MemberSingle) String() string            { return proto.CompactTextString(m) }
func (*MemberSingle) ProtoMessage()               {}
func (*MemberSingle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MemberSingle) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *MemberSingle) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MemberSingle) GetOrt() float32 {
	if m != nil {
		return m.Ort
	}
	return 0
}

// 用户分配策略信息
type SigeForSgyInfo struct {
	Addr      string  `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	ID        string  `protobuf:"bytes,2,opt,name=ID" json:"ID,omitempty"`
	Seq       int64   `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	Timestamp int64   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Ort       float32 `protobuf:"fixed32,5,opt,name=ort" json:"ort,omitempty"`
}

func (m *SigeForSgyInfo) Reset()                    { *m = SigeForSgyInfo{} }
func (m *SigeForSgyInfo) String() string            { return proto.CompactTextString(m) }
func (*SigeForSgyInfo) ProtoMessage()               {}
func (*SigeForSgyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SigeForSgyInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *SigeForSgyInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SigeForSgyInfo) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SigeForSgyInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SigeForSgyInfo) GetOrt() float32 {
	if m != nil {
		return m.Ort
	}
	return 0
}

type SigeForSgy struct {
	Si     *SigeForSgyInfo `protobuf:"bytes,1,opt,name=si" json:"si,omitempty"`
	Script string          `protobuf:"bytes,2,opt,name=script" json:"script,omitempty"`
}

func (m *SigeForSgy) Reset()                    { *m = SigeForSgy{} }
func (m *SigeForSgy) String() string            { return proto.CompactTextString(m) }
func (*SigeForSgy) ProtoMessage()               {}
func (*SigeForSgy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SigeForSgy) GetSi() *SigeForSgyInfo {
	if m != nil {
		return m.Si
	}
	return nil
}

func (m *SigeForSgy) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

type SigeForSgyStub struct {
	Set []*SigeForSgy `protobuf:"bytes,1,rep,name=set" json:"set,omitempty"`
}

func (m *SigeForSgyStub) Reset()                    { *m = SigeForSgyStub{} }
func (m *SigeForSgyStub) String() string            { return proto.CompactTextString(m) }
func (*SigeForSgyStub) ProtoMessage()               {}
func (*SigeForSgyStub) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SigeForSgyStub) GetSet() []*SigeForSgy {
	if m != nil {
		return m.Set
	}
	return nil
}

// 用以向系统提出新的分配策略
type ASgyProposeInfo struct {
	ContractAddr string      `protobuf:"bytes,1,opt,name=contractAddr" json:"contractAddr,omitempty"`
	PriorID      string      `protobuf:"bytes,2,opt,name=priorID" json:"priorID,omitempty"`
	UserAddr     string      `protobuf:"bytes,3,opt,name=userAddr" json:"userAddr,omitempty"`
	Mi           *MemberInfo `protobuf:"bytes,4,opt,name=mi" json:"mi,omitempty"`
	Timestamp    int64       `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Seq          int64       `protobuf:"varint,6,opt,name=seq" json:"seq,omitempty"`
}

func (m *ASgyProposeInfo) Reset()                    { *m = ASgyProposeInfo{} }
func (m *ASgyProposeInfo) String() string            { return proto.CompactTextString(m) }
func (*ASgyProposeInfo) ProtoMessage()               {}
func (*ASgyProposeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ASgyProposeInfo) GetContractAddr() string {
	if m != nil {
		return m.ContractAddr
	}
	return ""
}

func (m *ASgyProposeInfo) GetPriorID() string {
	if m != nil {
		return m.PriorID
	}
	return ""
}

func (m *ASgyProposeInfo) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *ASgyProposeInfo) GetMi() *MemberInfo {
	if m != nil {
		return m.Mi
	}
	return nil
}

func (m *ASgyProposeInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ASgyProposeInfo) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type ASgyPropose struct {
	Asgip  *ASgyProposeInfo `protobuf:"bytes,1,opt,name=asgip" json:"asgip,omitempty"`
	Script string           `protobuf:"bytes,2,opt,name=script" json:"script,omitempty"`
}

func (m *ASgyPropose) Reset()                    { *m = ASgyPropose{} }
func (m *ASgyPropose) String() string            { return proto.CompactTextString(m) }
func (*ASgyPropose) ProtoMessage()               {}
func (*ASgyPropose) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ASgyPropose) GetAsgip() *ASgyProposeInfo {
	if m != nil {
		return m.Asgip
	}
	return nil
}

func (m *ASgyPropose) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

type TranferOutput struct {
	OutAddr string  `protobuf:"bytes,1,opt,name=outAddr" json:"outAddr,omitempty"`
	OutNum  float32 `protobuf:"fixed32,2,opt,name=outNum" json:"outNum,omitempty"`
}

func (m *TranferOutput) Reset()                    { *m = TranferOutput{} }
func (m *TranferOutput) String() string            { return proto.CompactTextString(m) }
func (*TranferOutput) ProtoMessage()               {}
func (*TranferOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *TranferOutput) GetOutAddr() string {
	if m != nil {
		return m.OutAddr
	}
	return ""
}

func (m *TranferOutput) GetOutNum() float32 {
	if m != nil {
		return m.OutNum
	}
	return 0
}

type TxInfo struct {
	Timestamp    int64            `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	InputAddr    string           `protobuf:"bytes,2,opt,name=inputAddr" json:"inputAddr,omitempty"`
	InputBalance float32          `protobuf:"fixed32,3,opt,name=inputBalance" json:"inputBalance,omitempty"`
	Nounce       float32          `protobuf:"fixed32,4,opt,name=nounce" json:"nounce,omitempty"`
	Output       []*TranferOutput `protobuf:"bytes,5,rep,name=output" json:"output,omitempty"`
	Info         string           `protobuf:"bytes,6,opt,name=info" json:"info,omitempty"`
}

func (m *TxInfo) Reset()                    { *m = TxInfo{} }
func (m *TxInfo) String() string            { return proto.CompactTextString(m) }
func (*TxInfo) ProtoMessage()               {}
func (*TxInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TxInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TxInfo) GetInputAddr() string {
	if m != nil {
		return m.InputAddr
	}
	return ""
}

func (m *TxInfo) GetInputBalance() float32 {
	if m != nil {
		return m.InputBalance
	}
	return 0
}

func (m *TxInfo) GetNounce() float32 {
	if m != nil {
		return m.Nounce
	}
	return 0
}

func (m *TxInfo) GetOutput() []*TranferOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *TxInfo) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type TX struct {
	Tx     *TxInfo `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	Script string  `protobuf:"bytes,2,opt,name=script" json:"script,omitempty"`
}

func (m *TX) Reset()                    { *m = TX{} }
func (m *TX) String() string            { return proto.CompactTextString(m) }
func (*TX) ProtoMessage()               {}
func (*TX) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *TX) GetTx() *TxInfo {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *TX) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "lyan.Account")
	proto.RegisterType((*AllocateSgy)(nil), "lyan.AllocateSgy")
	proto.RegisterType((*MemberInfo)(nil), "lyan.MemberInfo")
	proto.RegisterType((*MemberSingle)(nil), "lyan.MemberSingle")
	proto.RegisterType((*SigeForSgyInfo)(nil), "lyan.SigeForSgyInfo")
	proto.RegisterType((*SigeForSgy)(nil), "lyan.SigeForSgy")
	proto.RegisterType((*SigeForSgyStub)(nil), "lyan.SigeForSgyStub")
	proto.RegisterType((*ASgyProposeInfo)(nil), "lyan.ASgyProposeInfo")
	proto.RegisterType((*ASgyPropose)(nil), "lyan.ASgyPropose")
	proto.RegisterType((*TranferOutput)(nil), "lyan.TranferOutput")
	proto.RegisterType((*TxInfo)(nil), "lyan.TxInfo")
	proto.RegisterType((*TX)(nil), "lyan.TX")
}

func init() { proto.RegisterFile("structure.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 597 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x4d, 0x6b, 0x1b, 0x3d,
	0x10, 0xc7, 0x59, 0xad, 0xed, 0xc4, 0xe3, 0x3c, 0x89, 0xd1, 0xd3, 0x96, 0x25, 0xe4, 0x60, 0x44,
	0x0e, 0x86, 0x40, 0x28, 0x6e, 0x4f, 0xbd, 0xb9, 0x84, 0x82, 0x0b, 0x6d, 0x83, 0x36, 0x87, 0x5e,
	0xd7, 0x6b, 0x65, 0x2b, 0xe2, 0x95, 0x36, 0x7a, 0x29, 0xf6, 0xa7, 0xe8, 0x27, 0xea, 0xa1, 0xdf,
	0xac, 0x48, 0x2b, 0xef, 0x4b, 0x48, 0x7a, 0x9b, 0xff, 0x68, 0x3d, 0xf3, 0x9f, 0xdf, 0x48, 0x86,
	0x33, 0x6d, 0x94, 0xcd, 0x8d, 0x55, 0xec, 0xba, 0x52, 0xd2, 0x48, 0x3c, 0xd8, 0xee, 0x33, 0x41,
	0x34, 0x1c, 0x2d, 0xf3, 0x5c, 0x5a, 0x61, 0x30, 0x86, 0x41, 0xb6, 0xd9, 0xa8, 0x24, 0x9a, 0x45,
	0xf3, 0x31, 0xf5, 0xb1, 0xcb, 0x3d, 0x70, 0xb1, 0x49, 0xd0, 0x2c, 0x9a, 0xc7, 0xd4, 0xc7, 0x38,
	0x81, 0xa3, 0x75, 0xb6, 0xcd, 0x44, 0xce, 0x92, 0x78, 0x16, 0xcd, 0x11, 0x3d, 0x48, 0xfc, 0x06,
	0x46, 0x95, 0x5d, 0x3f, 0xb0, 0x7d, 0x32, 0xf0, 0x35, 0x82, 0xc2, 0xa7, 0x80, 0x56, 0x37, 0xc9,
	0xd0, 0xe7, 0xd0, 0xea, 0x86, 0xfc, 0x8a, 0x60, 0xb2, 0xdc, 0x6e, 0x65, 0x9e, 0x19, 0x96, 0x16,
	0x87, 0xf3, 0xe8, 0x70, 0xee, 0x3a, 0x54, 0x8a, 0x4b, 0xb5, 0xba, 0xf1, 0x8d, 0xc7, 0xf4, 0x20,
	0x1b, 0x8f, 0x71, 0xc7, 0xe3, 0x25, 0x0c, 0xb2, 0xb4, 0xa8, 0x7b, 0x4e, 0x16, 0xd3, 0x6b, 0x37,
	0xd7, 0xf5, 0x17, 0x56, 0xae, 0x99, 0x5a, 0x89, 0x7b, 0x49, 0xfd, 0x29, 0xbe, 0x80, 0xf1, 0x8f,
	0x4c, 0xa7, 0xbc, 0x10, 0x6c, 0x93, 0x0c, 0x67, 0xf1, 0xfc, 0x98, 0xb6, 0x09, 0xf2, 0x16, 0xa0,
	0xfd, 0x05, 0x26, 0x80, 0x4a, 0x9d, 0x44, 0xb3, 0x78, 0x3e, 0x59, 0xe0, 0x6e, 0xbd, 0x94, 0x8b,
	0x62, 0xcb, 0x28, 0x2a, 0x35, 0xb9, 0x85, 0x93, 0x6e, 0x0e, 0x9f, 0xc3, 0xb1, 0x66, 0x8f, 0x96,
	0x39, 0x2c, 0x91, 0xa7, 0xd5, 0xe8, 0xc6, 0x35, 0xea, 0xb8, 0x9e, 0x42, 0x2c, 0x95, 0x09, 0x04,
	0x5d, 0x48, 0x7e, 0xc2, 0x69, 0xca, 0x0b, 0xf6, 0x49, 0xaa, 0xb4, 0xd8, 0x7b, 0x1f, 0xcf, 0x6d,
	0xa4, 0x66, 0x85, 0x1a, 0x56, 0x53, 0x88, 0x35, 0x7b, 0xf4, 0x75, 0x62, 0xea, 0x42, 0x37, 0xa9,
	0xe1, 0x25, 0xd3, 0x26, 0x2b, 0x2b, 0x0f, 0x25, 0xa6, 0x6d, 0xe2, 0xd0, 0x77, 0xd8, 0xf6, 0xfd,
	0x0c, 0xd0, 0xf6, 0xc5, 0x97, 0x80, 0x34, 0xf7, 0x1d, 0x27, 0x8b, 0x57, 0xf5, 0xec, 0x7d, 0x57,
	0x14, 0x69, 0xee, 0x36, 0xad, 0x73, 0xc5, 0x2b, 0x13, 0x9c, 0x04, 0x45, 0xde, 0x77, 0x67, 0x48,
	0x8d, 0x5d, 0x63, 0xe2, 0xfc, 0x99, 0x00, 0x73, 0xfa, 0xb4, 0xa0, 0x73, 0x6c, 0xc8, 0xef, 0x08,
	0xce, 0x96, 0x69, 0xb1, 0xbf, 0x55, 0xb2, 0x92, 0x9a, 0x85, 0x1d, 0x9c, 0xe4, 0x52, 0x18, 0x95,
	0xe5, 0x66, 0xd9, 0x32, 0xe8, 0xe5, 0xfe, 0x71, 0x4f, 0xce, 0xe1, 0xd8, 0x6a, 0xa6, 0x96, 0xed,
	0x5d, 0x69, 0x34, 0x9e, 0x01, 0x2a, 0xf9, 0x8b, 0xb7, 0x05, 0x95, 0xbc, 0x4f, 0x70, 0xf8, 0x0c,
	0x41, 0x47, 0x7c, 0xd4, 0x10, 0x27, 0x14, 0x26, 0x1d, 0xfb, 0xf8, 0x0a, 0x86, 0x99, 0x2e, 0x78,
	0x15, 0x28, 0xbe, 0xae, 0x7b, 0x3c, 0x19, 0x90, 0xd6, 0xdf, 0xbc, 0x48, 0x72, 0x09, 0xff, 0xdd,
	0xa9, 0x4c, 0xdc, 0x33, 0xf5, 0xcd, 0x9a, 0xca, 0x1a, 0x37, 0xac, 0xb4, 0x5d, 0x16, 0x07, 0xe9,
	0x4a, 0x48, 0x6b, 0xbe, 0xda, 0xd2, 0x97, 0x40, 0x34, 0x28, 0xf2, 0x27, 0x82, 0xd1, 0xdd, 0xce,
	0xd3, 0xec, 0x4d, 0x14, 0x3d, 0x9d, 0xe8, 0x02, 0xc6, 0x5c, 0x54, 0xa1, 0x78, 0x6d, 0xa3, 0x4d,
	0xb8, 0x4d, 0x78, 0xf1, 0xb1, 0xf7, 0xe8, 0x7b, 0x39, 0x67, 0x41, 0x48, 0xeb, 0x4e, 0x07, 0xb5,
	0x85, 0x5a, 0xe1, 0x2b, 0x6f, 0xad, 0xb2, 0xc6, 0x3f, 0xb9, 0xc9, 0xe2, 0xff, 0x9a, 0x45, 0x6f,
	0x32, 0x1a, 0x3e, 0x71, 0xd7, 0x9d, 0x8b, 0x7b, 0xe9, 0xc9, 0x8e, 0xa9, 0x8f, 0xc9, 0x07, 0x40,
	0x77, 0xdf, 0xf1, 0x05, 0x20, 0xb3, 0x0b, 0x38, 0x4f, 0x42, 0x89, 0x5d, 0xbd, 0x2e, 0xb3, 0x7b,
	0x09, 0xe1, 0x7a, 0xe4, 0xff, 0xe8, 0xde, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x65, 0x17,
	0x97, 0xfb, 0x04, 0x00, 0x00,
}
